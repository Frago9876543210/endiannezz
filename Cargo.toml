[package]
name = "endiannezz"
version = "0.4.3"
authors = ["Frago9876543210"]
edition = "2018"
license = "MIT"
description = "Zero dependencies library for I/O endianness on high-level"
repository = "https://github.com/Frago9876543210/endiannezz"
documentation = "https://docs.rs/endiannezz"
keywords = ["endian", "endianness", "binary", "little-endian", "big-endian"]
categories = ["encoding", "parsing", "rust-patterns"]
readme = "README.md"

[dev-dependencies]
automod = "0.2"
rustversion = "1.0"
trybuild = { version = "1.0", features = ["diff"] }

[dependencies]
endiannezz_derive = { version = "=0.1.1", path = "derive", optional = true }

[features]
default = ["inline_primitives", "derive"]

#Provide derive(Io) proc macro
derive = ["endiannezz_derive"]
#Usually, inlining of primitives make sense. Turn it off if you don't think so.
inline_primitives = []
#NOTE: It may increase size of binary is some cases.
inline_io = []
